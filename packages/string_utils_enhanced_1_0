{"mpm_version":1.1,"package_changelog":"","package_created_at":1642718470,"package_created_by":"Slither (#2)","package_data":{"aliases":["string","utils"],"cored_property_references":{},"corified_references":["string_utils"],"dependent_verb_map":{},"name":"string utilities","object":"#20|obj","parent":"#-1|obj","parent_data":{"object":"#-1|obj"},"properties":{"property_data":{},"property_names":[]},"verbs":{"verb_data":{"name_of_single":{"args":["this","none","this"],"code":["\":name_of_single(LIST objects, INT width)\";","\"Similar to :names_of except this verb helps with pretty printing, it returns a list which can be columnized.\";","{items, ?width = 20} = args;","newlist = {};","for item in (items)","  yin(0);","  if (typeof(item) == OBJ && valid(item))","    newlist = setadd(newlist, tostr(this:left(item.name, width * -1), \" (\", this:left(item, length(tostr(toint(max_object()))) + 1), \")\"));","  endif","endfor","return newlist;"],"cored_props_in_code":[],"cored_verbs_in_code":[],"direct_cored_verbs_in_code":[],"info":["#2|obj","rxd","name_of_single"],"wizard":1},"names_of_indented":{"args":["this","none","this"],"code":["\":names_of_indented(LIST objects) = > LIST\";","\"Similar to $su:names_of except this verb helps with pretty printing, it returns a list which is indented based on the order.\";","\"returns a list of strings that can be passed to :tell_lines\";","{objects} = args;","newlist = {};","indentsize = 0;","for item in (objects)","  if (typeof(item) == OBJ && valid(item))","    newlist = setadd(newlist, tostr(this:left(\"\", indentsize), \"* \", this:left(item.name, -35), this:right(tostr(\"(\", this:left(item, 5), \")\"), 41 - indentsize)));","    indentsize = indentsize + 2;","  endif","endfor","return newlist;"],"cored_props_in_code":[],"cored_verbs_in_code":[],"direct_cored_verbs_in_code":[],"info":["#2|obj","rxd","names_of_indented"],"wizard":1}},"verb_names":["names_of_indented","name_of_single"]}},"package_description":"This package adds two verbs to $string_utils: names_of_indented and name_of_single which are used for pretty printing objects with indentation.","package_hash":"C2F77FDA0D9D8712544E2FB1DBAA8C43","package_id":"DE6F2F3E778E8ECB8EDAE45EDF0CDD6A","package_name":"String Utils Expanded","package_post_install_note":"Usage: ;player:tell_lines($string_utils:name_of_single({#1, #2, #3})) & ;player:tell_lines($string_utils:names_of_indented({#1, #2, #3}))","package_url":"https://raw.githubusercontent.com/sevenecks/moo-package-manager/mpm_1_2/packages/string_utils_enhanced_1_0","package_version":1.0}