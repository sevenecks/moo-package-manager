Diff Utilities%%%1.0%%%55EDCD5E087F8A501F984C1B335150CB%%%This is a repackage & update of the Stunt (Improvise.db) diff tooling. It provides a straightforward way to diff two lists. An example of its usage is diffing current verb code against proposed changes. The package includes a very simple ANSI verb as well that is MOO agnostic and does not rely on any ANSI Utility being setup or configured.%%%1642560590%%%Fengshui (#22664)%%%https://raw.githubusercontent.com/sevenecks/moo-package-manager/master/packages/diff_utils_1_0%%%added mpm version
Enhanced Coder Verbs%%%1.1%%%42F0DD9A48B49ABF73B2F6352DA61D25%%%(Warning: This package relies on the 'String Utils Enhanced @ 1.1' package) This package adds several quality of life updates to existing verbs, and a handful of new verbs to make your life as a coder easier. It provides an @verbs command that prints verbs + perms + args +optional last touched date, as well as providing other information in an colored fashion. It provides an updated :tell_contents verb which prints your inventory in a columnized fashion with object numbers; it provides and @parents verb which shows you all an objects parents in a pretty hierarchy; it provides @kids which is the opposite of @parents, showing all the kids of an object. It provides @props which shows properties of an object in a prettier fashion, with options for providing details on the props. It provides @cored which can be used to pretty print all cored objects or do @cored #20 to see cored references to an object. It also provides an updated @where which is easier and prettier to use. @tree will print out a tree based descendents map of all descendants of an object that has children/is fertile, with counts and other info.%%%1643087613%%%Slither (#2)%%%https://raw.githubusercontent.com/sevenecks/moo-package-manager/master/packages/enhanced_coder_verbs_1_1%%%added @tree and :do_tree verbs
Map Utilities%%%1.0%%%25E4D0C0B068D6FFEE4F870DC8762913%%%A very basic $map_utils that provides two verbs currently. 'map_print' pretty prints a map and 'dotkey' accepts a map and a string in the form of 'slither.stats.strength' and then indexes into the map such that the returned result is the value of map["slither"]["stats"]["strength"].%%%1642560697%%%Fengshui (#22664)%%%https://raw.githubusercontent.com/sevenecks/moo-package-manager/master/packages/map_utils_1_0%%%added mpm version
MOO Code Scanner%%%1.1%%%9B507E7EB86FC4B01FC5C15F7A134F42%%%This package creates a new $code_scanner object which provides the ability to scan a verb for possible issues, code smells & missing best practices. It is ANSI enabled. It can be easily integrated with @program to display issues when programming a verb.%%%1642574356%%%Slither (#2)%%%https://raw.githubusercontent.com/sevenecks/moo-package-manager/master/packages/code_scanner_1_1%%%
MOO Package Manager Wizard Verbs%%%1.3%%%0859983A3248E26A4D4CA5DB63ACF518%%%Installs the @make-package, @view-package, @load-package, @install-package, and @manage-packages verbs on to the Wizard that installs the package. This package is essential for using MPM.%%%1642998480%%%Fengshui (#22664)%%%https://raw.githubusercontent.com/sevenecks/moo-package-manager/master/packages/moo_package_manager_wizard_verbs_1_3%%%See github changelog: https://github.com/sevenecks/moo-package-manager/blob/master/CHANGELOG.md
MOO Package Manager%%%1.3%%%57A6828DF2F133625512A864D54FEE94%%%(WARNING: You need to install MOO Package Manager Wizard Verbs 1.3 BEFORE installing this, due to some bugs in how upgrades work that are resolved by that package) The MOO Package Manager is a configurable utility for packaging code up on one MOO and making it available for installation on another MOO. At the core it is provided with an object which acts as the origin object which is the starting point and primary piece of your package. It then populates and serializes a dependency graph, which is turned into a serialized version (using maps) of your package. The serialized map is then encoded and can then be copied to another MOO / made available online and installed via the MOO Package Manager. More information can be found here: https://github.com/sevenecks/moo-package-manager%%%1643001214%%%Fengshui (#22664)%%%https://raw.githubusercontent.com/sevenecks/moo-package-manager/master/packages/moo_package_manager_1_3%%%See github repo for change log: https://github.com/sevenecks/moo-package-manager
Read Selection%%%1.0%%%C0066D76400E5F4FE7A93B30E8D084D3%%%This package adds :read_selection and :read_selection_with_options to your $command_utils. These two verbs make it easier to prompt for user input (like picking an '1' from a list of items that was displayed) and gracefully handles them entering completely bogus selections.%%%1642570867%%%Fengshui (#22664)%%%https://raw.githubusercontent.com/sevenecks/moo-package-manager/master/packages/read_selection_1_0%%%
String Utils Enhanced%%%1.1%%%5D77C488EDAC51DB90EC878E97711B24%%%This package adds verbs to your String Utils: names_of_indented and name_of_single which are used for pretty printing objects with indentation, as well as :type_to_string which takes an INT representing a type (IE: MAP or BOOL or STR) and converts it to the string representation IE: \"MAP\".%%%1642965858%%%Fengshui (#22664)%%%https://raw.githubusercontent.com/sevenecks/moo-package-manager/master/packages/string_utils_enhanced_1_1%%%added :type_to_string
The Almighty Scheduler Wizard Verbs%%%1.0%%%E87D2422F91971EACABC54F7761534D7%%%This package contains @scheduled which is a helper verb for interacting with 'The Almighty Scheduler' a package also available in this repo. It will let you view information on verbs and objects that exist on your scheduler. This is particularly useful if you have a LOT of stuff scheduled.%%%1643084529%%%Slither (#2)%%%https://raw.githubusercontent.com/sevenecks/moo-package-manager/master/packages/the_almighty_scheduler_wizard_verbs_1_0%%%
The Almighty Scheduler%%%1.0%%%3D7C3D32631A4D35E222FFC4A647841F%%%This is a $scheduler which allows you to schedule verbs to be run at certain times, in a certain amount of time, or at certain intervals. It is what Sindome uses to handle all of its scheduled tasks. It has been in use there for two decades and is battle tested. It comes with a 'help $scheduler' help file with details on how to use it. If you choose to install this package, you should also consider installed the 'The Almighty Scheduler Wizard Verbs' which adds some tooling around viewing scheduled tasks.%%%1643083528%%%Slither (#2)%%%https://raw.githubusercontent.com/sevenecks/moo-package-manager/master/packages/the_almighty_scheduler_1_0%%%
