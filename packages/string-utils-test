{"package_created_at":1642439623,"package_created_by":"Fengshui (#22664)","package_data":{"aliases":["string","utils","nw","$su"],"cored_property_references":{"cu":{"is_object":true,"object_data":{"aliases":["Code","Utilities","Collection","Code Utilities Collection"],"corified_references":["command_utils","cu"],"name":"command utilities","object":"#56|obj","parent_data":{"aliases":["Code","Utilities","Collection","Code Utilities Collection"],"cored_property_references":{},"corified_references":[],"dependent_verb_map":{},"name":"Code Utilities Collection","object":"#12654|obj","parent":"#79|obj","parent_data":{"aliases":["Generic Utilities Package"],"cored_property_references":{},"corified_references":["generic_utils","util"],"dependent_verb_map":{},"name":"Generic Utilities Package","object":"#79|obj","parent":"#1|obj","parent_data":{"aliases":[],"corified_references":["root_class"],"name":"Root Class","object":"#1|obj"},"properties":{"property_data":{},"property_names":[]},"verbs":{"verb_data":{},"verb_names":[]}},"properties":{"property_data":{},"property_names":[]},"verbs":{"verb_data":{},"verb_names":[]}}},"property-info":["#3278|obj","r"],"value":"#56|obj"}},"corified_references":[],"dependent_verb_map":{"#56|obj":{"aliases":["Code","Utilities","Collection","Code Utilities Collection"],"cored_property_references":{"login":{"is_object":true,"object_data":{"aliases":["Login Commands"],"corified_references":["login"],"name":"Login Commands","object":"#10|obj","parent_data":{"aliases":[],"corified_references":["root_class"],"name":"Root Class","object":"#1|obj"}},"property-info":["#2|obj","r"],"value":"#10|obj"}},"corified_references":["command_utils","cu"],"dependent_verb_map":{"#10|obj":{"aliases":["Login Commands"],"cored_property_references":{},"corified_references":["login"],"dependent_verb_map":{},"name":"Login Commands","object":"#10|obj","parent":"#1|obj","parent_data":{"aliases":[],"corified_references":["root_class"],"name":"Root Class","object":"#1|obj"},"properties":{"property_data":{},"property_names":[]},"verbs":{"verb_data":{"current_lag":{"args":["this","none","this"],"code":["\"VMS VERSION 1.0\";","return this.current_lag;"],"cored_props_in_code":[],"cored_verbs_in_code":[],"direct_cored_verbs_in_code":[],"info":["#2|obj","rxd","current_lag"],"wizard":1}},"verb_names":["current_lag"]}}},"name":"command utilities","object":"#56|obj","parent":"#12654|obj","parent_data":{"aliases":["Code","Utilities","Collection","Code Utilities Collection"],"cored_property_references":{},"corified_references":[],"dependent_verb_map":{},"name":"Code Utilities Collection","object":"#12654|obj","parent":"#79|obj","parent_data":{"aliases":["Generic Utilities Package"],"cored_property_references":{},"corified_references":["generic_utils","util"],"dependent_verb_map":{},"name":"Generic Utilities Package","object":"#79|obj","parent":"#1|obj","parent_data":{"aliases":[],"corified_references":["root_class"],"name":"Root Class","object":"#1|obj"},"properties":{"property_data":{},"property_names":[]},"verbs":{"verb_data":{},"verb_names":[]}},"properties":{"property_data":{},"property_names":[]},"verbs":{"verb_data":{},"verb_names":[]}},"properties":{"property_data":{},"property_names":[]},"verbs":{"verb_data":{"sin":{"args":["this","none","this"],"code":["\"Usage:  $command_utils:suspend_if_needed(<time>[, @<announcement>])\";","\"See if we're running out of ticks or seconds, and if so suspend(<time>) and return true.  If more than one arg is given, print the remainder with player:tell.\";","try","  if (callers()[1][2] == \"redux\")","    kill_task(task_id());","  endif","except e (ANY)","  notify($johnny_bit, tostr(\"TOOL: \", e[1]));","endtry","if (ticks_left() < 4000 || seconds_left() < 2)","  \"Note: above computation should be the same as :running_out_of_time.\";","  if ((ann = listdelete(args, 1)) && valid(player))","    player:tell(@ann);","  endif","  if (args[1] == 30)","    amount = 60;","  else","    amount = max(args[1], min($login:current_lag(), 10));","  endif","  if ($panic_mode)","    notify($johnny_bit, tostr(\"panic mode kill task => \", toliteral(callers())));","    kill_task(task_id());","  endif","  set_task_perms(caller_perms());","  suspend(amount);","  return 1;","endif","\"VMS NOTE moved panic IF above task perms change #98 05/28/15  3:06\";","\"VMS NOTE fixing bug from panic mode #98 05/28/15  2:42\";","\"VMS NOTE panic mode will just not suspend in sins #98 05/11/15  7:05\";","\"VMS NOTE custom hack.\";","\"VMS VERSION 2.0\";","\"Last modified by Johnny (#98) on Thu May 28 15:06:36 2015 PDT\";"],"cored_props_in_code":[],"cored_verbs_in_code":["login:current_lag"],"direct_cored_verbs_in_code":["login"],"info":["#2|obj","rxd","suspend_if_needed sin"],"wizard":1}},"verb_names":["sin"]}}},"name":"string utilities","object":"#20|obj","parent":"#12654|obj","parent_data":{"aliases":["Code","Utilities","Collection","Code Utilities Collection"],"cored_property_references":{},"corified_references":[],"dependent_verb_map":{},"name":"Code Utilities Collection","object":"#12654|obj","parent":"#79|obj","parent_data":{"aliases":["Generic Utilities Package"],"cored_property_references":{},"corified_references":["generic_utils","util"],"dependent_verb_map":{},"name":"Generic Utilities Package","object":"#79|obj","parent":"#1|obj","parent_data":{"aliases":[],"corified_references":["root_class"],"name":"Root Class","object":"#1|obj"},"properties":{"property_data":{},"property_names":[]},"verbs":{"verb_data":{},"verb_names":[]}},"properties":{"property_data":{},"property_names":[]},"verbs":{"verb_data":{},"verb_names":[]}},"properties":{"property_data":{"aliases":{"info":["#2|obj","rc"],"value":["string","utils","nw","$su"]},"alphabet":{"info":["#2|obj","rc"],"value":"abcdefghijklmnopqrstuvwxyz"},"binary_conversions":{"info":["#3172|obj","r"],"value":["00001","00010","00011","00100","00101","00110","00111","01000","01001","01010","01011","01100","01101","01110","01111","10000","10001","10010","10011","10100","10101","10110","10111","11000","11001","11010"]},"carat":{"info":["#98|obj","r"],"value":"^"},"caseless_alphabet":{"info":["#98|obj","r"],"value":"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ "},"common_words":{"info":["#98|obj","rw"],"value":["the","it","a","an","of","and","i","am","you","are","is","or","for","from","to","too","have","has","had","as","was"]},"create_date":{"info":["#98|obj","r"],"value":0},"debug":{"info":["#98|obj","rw"],"value":0},"description":{"info":["#2|obj","rc"],"value":["This is the string utilities utility package.  See `help $string_utils' for more details."]},"digits":{"info":["#2|obj","rc"],"value":"0123456789"},"exit_aliases":{"info":["#22664|obj","r"],"value":[["north","n"],["south","s"],["east","e"],["west","w"],["northwest","nw"],["northeast","ne"],["southwest","sw"],["southeast","se"],["up","u"],["down","d"],["out","o"],["in","i"],["edge","g"],["above","a"]]},"greek_alphabet":{"info":["#98|obj","r"],"value":["alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigma","tau","upsilon","phi","chi","psi","omega"]},"help_msg":{"info":["#2|obj","rc"],"value":["For a complete description of a given verb, do `help $string_utils:verbname'","","    Conversion routines:","",":from_list    (list [,sep])                          => \"foo1foo2foo3\"",":english_list (str-list[,none-str[,and-str[, sep]]]) => \"foo1, foo2, and foo3\"",":title_list*c (obj-list[,none-str[,and-str[, sep]]]) => \"foo1, foo2, and foo3\"","                                                  or => \"Foo1, foo2, and foo3\"",":from_value   (value [,quoteflag [,maxlistdepth]])   => \"{foo1, foo2, foo3}\"",":print        (value)                                => value in string",":abbreviated_value (value, options)                  => short value in string",":csv ({list})                                        => export CSV list","",":to_value       (string)     => {success?, value or error message}",":prefix_to_value(string)     => {rest of string, value} or {0, error message}","",":english_number(42)          => \"forty-two\"",":english_ones(2)             => \"two\";",":english_tens(30)            => \"thirty\";",":english_ordinal(42)         => \"forty-second\"",":ordinal(42)                 => \"42nd\"",":group_number(42135 [,sep])  => \"42,135\"",":from_ASCII(65)              => \"A\"",":to_ASCII(\"A\")               => 65",":from_seconds(number)        => string of rough time passed in large increments","",":name_and_number(obj [,sep]) => \"ObjectName (#obj)\"",":name_and_number_list({obj1,obj2} [,sep])","                             => \"ObjectName1 (#obj1) and ObjectName2 (#obj2)\"",":nn is an alias for :name_and_number.",":nn_list is an alias for :name_and_number_list.","","    Type checking:","",":is_integer   (string) => return true if string is composed entirely of digits",":is_float     (string) => return true if string holds just a floating point","","    Parsing:","",":explode (string,char) -- string => list of words delimited by char",":words   (string)      -- string => list of words (as with command line parser)",":word_start (string)   -- string => list of start-end pairs.",":first_word (string)   -- string => list {first word, rest of string} or {}",":char_list  (string)   -- string => list of characters in string","",":parse_command (cmd_line [,player] => mimics action of builtin parser","","    Matching:","",":find_prefix  (prefix, string-list)=>list index of element starting with prefix",":index_delimited(string,target[,case]) =>index of delimited string occurrence",":index_all    (string, target string)          => list of all matched positions",":common       (first string, second string)  => length of longest common prefix",":match        (string, [obj-list, prop-name]+) => matching object",":match_player (string-list[,me-object])        => list of matching players",":match_object (string, location)               => default object match...",":match_player_or_object (string, location) => object then player matching",":literal_object (string)                       => match against #xxx, $foo",":match_stringlist (string, targets)            => match against static strings",":match_string (string, wildcard target,options)=> match against a wildcard","","    Pretty printing:","",":space         (n/string[,filler])     => n spaces",":left          (string,width[,filler]) => left justified string in field ",":right         (string,width[,filler]) => right justified string in field",":center/re     (string,width[,lfiller[,rfiller]]) => centered string in field",":columnize/se  (list,n[,width])        => list of strings in n columns (prefer :new_columnize)",":new_columnize (list,n[,width])        => works better with colors, ","                                          list of strings in n columns","","    Substitutions","",":substitute (string,subst_list [,case])   -- general substitutions.",":substitute_delimited (string,subst_list [,case])","                                          -- like subst, but uses index_delim",":pronoun_sub (string/list[,who[,thing[,location]]])","                                          -- pronoun substitutions.",":pronoun_sub_secure (string[,who[,thing[,location]]],default)","                                          -- substitute and check for names.",":pronoun_quote (string/list/subst_list)   -- quoting for pronoun substitutions.","","    Miscellaneous string munging:","",":trim         (string)       => string with outside whitespace removed.",":triml        (string)       => string with leading whitespace removed.",":trimr        (string)       => string with trailing whitespace removed.",":strip_chars  (string,chars) => string with all chars in `chars' removed.",":strip_all_but(string,chars) => string with all chars not in `chars' removed.",":capitalize/se(string)       => string with first letter capitalized.",":uppercase/lowercase(string) => string with all letters upper or lowercase.",":names_of     (list of OBJ)  => string with names and object numbers of items.","   See also :name_of_single, :names_of_indented and :who_names_of_indented","",":a_or_an      (word)         => \"a\" or \"an\" as appropriate for that word.",":reverse      (string)       => \"gnirts\"",":incr_alpha   (string)       => \"increments\" the string alphabetically","","    A useful property:","",".alphabet                    => \"abcdefghijklmnopqrstuvwxyz\"",""," *------------------------ Sindome Specific Verbs ------------------------*"," *                                                                        *"," * :coords_list(string)           => converts string coordinates to list  *"," * :is_vowel(letter)              => returns 1 if the letter is a vowel   *"," * :lang_scramble(string)         => scrambles a string for languages     *"," * :opposite_direction(direction) => the opposite direction               *"," * :wrap(line, length)            => list of lines wrapped at length      *"," * :return_number(number)         => full formatting like :english_number *"," * :spell_check(lines)            => given the lines of text, spell check *"," *   note: This is a really heavy use of file/IO, avoid for the most part *"," * :title_case(STR)               => convert a string to TitleCase        *"," *                                                                        *"," * :to_binary(string)             => a string in readable binary format   *"," * :from_binary(binary formatted) => a string from the binary format      *"," * :windows_directory_format(s)   => formatted directory reference        *"," * :return_common_words(string)   => removes common words like 'the' etc  *"," * :is_affirmative(string)        => does string contain a 'yes' equiv    *"," * :is_negative(string)           => does string contain a 'no' equiv     *"," * :endswith(string, ending)      => 1 of 0 (does string end with ending) *"," *                                                                        *"," * :proportionate(total, left, strgs) => like 'pack is almost empty' etc  *"," *                                                                        *"," * :alternate_colors(lst, ?c1, ?c2) => apply alternating colors to a list *"," * :concat(LIST)                  => return tostr(@args)                  *"," *                                                                        *"," * Note: Multiple verbs defined on $su can and have been modified, check  *"," * the usage of them when you can and always test                         *"," *------------------------------------------------------------------------*","","Suspended versions (with _suspended at end of name) for","     :print     :from_value     :columnize/se      :match       :char_list","     :words"]},"instance_id":{"info":["#2|obj","rwc"],"value":"#12654-1541212666.74481"},"key":{"info":["#2|obj","c"],"value":0},"last_location":{"info":["#98|obj","rw"],"value":"#-1|obj"},"movement_queue":{"info":["#98|obj","r"],"value":[]},"non_alphabet_chars":{"info":["#22664|obj","r"],"value":"!@#$%^&*()-_[]{};:',.\"<>/?`~ "},"number_words":{"info":["#3172|obj","r"],"value":["one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen","twenty","thirty","forty","fifty","sixty","seventy","eighty","ninety","one hundred"]},"object_size":{"info":["#36|obj","r"],"value":[88186,1755134566]},"permitted_pronoun_property_references":{"info":["#98|obj","r"],"value":["%[dpo]","%[dpp]","%[dpq]","%[dpr]","%[dps]","%[dpoc]","%[dppc]","%[dpqc]","%[dprc]","%[dpsc]","%[ipo]","%[ipp]","%[ipq]","%[ipr]","%[ips]","%[ipoc]","%[ippc]","%[ipqc]","%[iprc]","%[ipsc]"]},"realname":{"info":["#2|obj","rc"],"value":""},"specials":{"info":["#1673|obj","r"],"value":"._"},"tab":{"info":["#2|obj","rc"],"value":"\t"},"type_history":{"info":["#98|obj","r"],"value":[]},"typos":{"info":["#1673|obj","r"],"value":[["#45263|obj","#56410|obj",0,4,"Says the AV is having 'squealing tires' when turning. http://i.imgur.com/sWmzyyB.png",""],["#44551|obj","#2931|obj",0,4,"Eisako carefully mounts the Azura over Azura's empty socket and slots the SK Right CyberEye into the occipital forceps's implant chamber. (Occurred when Eisako was insalling a cybereye in Azura. I guess she should be mounting the occipital forceps over the empty socket?)",""],["#13637|obj","#15296|obj",0,4,"the 12th object of corpses (as reflected by count corpse' is spelled 'twelth'. Trying to 'look twelfth' thus does not work. This word sucks btw.",""],["#43302|obj","#58859|obj",0,6,"Warryn tried to grab Krog but he pushes he aside. - should read he pushes him aside. Think a pronoun just needs to be changed to %o?",""],["#65393|obj","#2097|obj",0,2,"Gibson Avenue and Berretta Way - A group of gangers with the letters 'Sinner tattooed across their knuckles seem to be buying their daily fix. They approach a small child wearing a 'Chen Mayo' t-shirt, who appears to be no older than eleven. They joke with each other, openly discussing the prospects of ripping the kid off.   \"Sinner\" quotation is not closed.",""],["#67908|obj","#21490|obj",0,4,"Outside, A bright flash momentarily blinds you followed seconds later by a deafening crack as lightening strikes your surroundings. - that should be lightning, not lightening. ",""],["#67992|obj","#2070|obj",0,2,"The typo occurred in some of the randomly changing flavor text.  By that I mean the text that is usually in the last paragraph of the room desc.  The paragraph / sentences before player objects and their @tp or @lp messages are displayed.  The actual error is a misspelling of bandanas.  The misspelling has two n's instead of one.  \"The foot and vehicle traffic is lighter in this area. Groups of gangers wearing //bandannas// that read 'Snake' patrol their turf wielding hatchets.\"",""],["#67992|obj","#523|obj",0,4,"The typo occurs in the automated DeathBall broadcasts on NLM 666.  The very last emit before the program ends says... \"The screen shifts to the world RENOWN DeathBall logo.\"  That is a grammatical error.  The correct phrase is \"world renowned\"",""],["#68296|obj","#408|obj",0,4,"\"It must be a real name (first, last or nickname). It cannot be a combination of names like 'IrishPrideKevin' or 'CyberpunkDemonGhostWarriorMonsterMash'. Those would be Kevin or Mash respectivelly.\" in chargen. Respectivelly should be respectively.",""],["#68374|obj","#1294|obj",0,2,"Apologies, my last Typo submission wasn't finished.  The copywrite info on the grid says 2082-2091.  Assuming NLM is still an active company that keeps up with its IP, the copywrite info should extend out to 2103.",""],["#61123|obj","#12542|obj",0,4,"The loud sound and harsh bright lights echo in your cortex. All of a sudden, the sound and lights stop, and you find yourself emersed in darkness. (Hit enter too fast. Wouldn't it be immersed, not emersed? Location: death script)",""],["#39661|obj","#38212|obj",0,2,"Ok didn't realize I had to do it all in one string, sorry about that. On the connection page: \"Dome Client v2.8.56a9653 The Sindome Corporation 1997-2018\" should probably be updated to 2019",""],["#67975|obj","#12542|obj",0,4,"During the death scene, the words \"as snapshot moments of your life scattering through your mind in a cacaphony of color.\" It should be cacophony! ",""],["#34382|obj","#16324|obj",0,2,"When you try to descend from a grapple hook and you have something on your hands, you get 'You need to free up your hands in order to climb the ladder.' instead of 'hook'.",""],["#69287|obj","#973|obj",0,7,"there is a typo in question 4 of the personality test. it says \"test if\" when it should say \"test it\" for one of the answers",""],["#68711|obj","#3707|obj",0,7,"in help corporations;Saedor-Krupp (SK). Skywatch isn't listed individually though it seems to me it should be, and where it is mentioned in the description of PRI; Formed after the merger of Skywatch (SK) and Shinohara Heavy Industries (SHI) So Skywatch (where listed) has the same abrievation as Saedor-Krupp both SK",""],["#34382|obj","#7540|obj",1563163094,4,"The WHO random line at the bottom reads 'Mr Studd(tm) Implants won't go limp on you.'. However there is a problem in the color, it changes from bright white to white.",""],["#65272|obj","#14083|obj",1563762639,5,"During the biomodification procedure, the third person view of Doctor Schuyler's actions uses the 'he' pronoun for the patient when it was a female patient.  It was that way for each of the auto-poses that occur during the installation of the biomod.",""],["#68525|obj","#45189|obj",1571422085,1,"On the item itself, SICADs and general chatter: 'Aglianico' as in 'A(n)glianico Grappa' doesn't have an 'N'.",""],["#84202|obj","#14239|obj",1577395044,1,"Some of the attack messaging for the katana and wakizashi have incorrect %pronouns, occasionally mixing up attacker and the person being attacked (%n and %d or %t I guess) and in one case referring to the katana as 'the combat engine'.",""],["#68729|obj","#48807|obj",1577508411,1,"Taijutsu interacting with the dodge skill shows the wrong pronouns with female characters. I'm unsure if it happens with more than one, I only specifically got this one. Typo in question: (combat missed you) [FEMALECHARA]'s foot slides wide, as you lithely dodge his attack.",""],["#68090|obj","#5893|obj",1580614597,1,"In the town hall, it was stated that with a poncho or shroud on, a character is still able to determine that the character wearing the disguise can tell the gender and build of the person underneath it. The @worn of the item kinda conflicts with this: \"...the front and back of this piece of clothing hiding almost any hint of her gender or build...\" I think this could be made a little bit more clear knowing that we can tell it's a puny male or amazonian female under the shroud, etc. ",""],["#84202|obj","#4943|obj",1582829897,1,"Sorry, round 3 on this MK23-S disarming me typo - apparently on review I didn't actually get disarmed. I was holding a sledgehammer. Chastity (disguised) had an MK23-S and attempted to disarm me and failed, however this message printed: \"Chastity snags hold of your arm and smashes your knuckles with a jarring blow from her pistol, sending your H&K Mk23-S tumbling to the floor.\" It was suuuuuper confusing, as evidenced by the multiple failed @typo attempts.",""],["#85252|obj","#5419|obj",1586368268,1,"Park generic NPCS sometimes have the following description. Typo isolated, should read 'beneath' : His face is painted up like a skeleton in white and black. It's hard to tell his age --beneth-- the makeup. He has a lean build and dirty hands.",""],["#68686|obj","#27958|obj",1587062721,1,"The title of https://www.sindome.org/who/ is \"Whose playing\" when it should be \"Who's playing\" (whose vs. who's)",""],["#24674|obj","#8824|obj",1587967469,1,"From @assign ue option 4, specialization: \"Type what weapon (that you have on you and are skillfully 'accomplished' with) you would like to specialize in\" - 'accomplished' is left over from the old skill level adjectives. I don't know what it corresponds to on the new skill adjectives list but this message should be updated to indicate what level of skill is needed before you can specialize.",""],["#68729|obj","#30987|obj",1588194470,1,"The 'combat parried' message of kuhkri vs brass knuckles shows up as \"You take a swing at [attacked player] with your UNDEFw, but [attacked player] swats your blade away with his fists.\" The kuhkri shows up as the 'UNDEFw' for other players as well.",""],["#77106|obj","#50120|obj",1588394868,1,"In the \".printing\" command when creating a new e-note entry, the last line says '*Your still editing, type '.' when your done*'  this is the incorrect usage of the word 'your', and it should be 'you're' or 'you are'.",""],["#85213|obj","#14254|obj",1588448007,1,"The victory message in the SHFL Game rooms says you pull \"the detonater\", not the \"detonator\".",""],["#68686|obj","#27958|obj",1590539994,1,"Lukeaire Stinger (possibly other Aeros too) when it moves: The LukeAire Stinger flys away with a blast of hot air, heading (direction). -- FLYS should be FLIES",""],["#85749|obj","#2392|obj",1599176969,1,"There's a -=very small=- typo when registering for the Grid 3.0: Remember to memorize it, Citizen.A node has been created",""],["#68090|obj","#60473|obj",1604727141,1,"a shrouded average madam punches the air as he dives her elbow into Wooden Dummy's chest. Typo present in:\"the air as HE dives her elbow\" ",""],["#78988|obj","#1294|obj",1605664683,1,"NLM security guards should have %p integrated into their nakeds, they are all make pronouns which makes it look weird on females.",""],["#62347|obj","#20260|obj",1607502077,1,"In the description of my curse-cat critter when I look at the critterdex, it says 'White pentagrams and hexes mark him fur.' It should be 'mark his fur.'",""],["#24674|obj","#47298|obj",1607712954,1,"\"The hatch leading below makes a loud beep and its entry light flashes bright green.\" this is the message when the UP hatch gets unlocked. From the other side, but still, this hatch isn't \"below\" this room.",""],["#68686|obj","#20635|obj",1608425548,1,"On the verb 'count' and ordinal counting during commands, 'twelth' should be 'twelfth' and 'ninteenth' should be 'nineteenth'",""],["#68686|obj","#11313|obj",1608442740,1,"WJF Phoenix-11 Interceptor - message upon seeing it enter a room. \"A WJF Phoenix-11 Interceptor flies in on a cushion of hot air from the herrigin.north.\" -- I have no idea what \"heririgin.\" is, but it's in each message, and probably shouldn't be there.",""],["#24674|obj","#4035|obj",1608499161,1,"\"You spot a well-dressed good-looking vixen selling a fabric to a smiling boy. to the southeast.\" Extra punctuation in this message, the period after \"boy.\" before the sentence is finished.",""],["#84950|obj","#35540|obj",1613883300,1,"Biochip reticulator procedure messages are backwards between subject and object, to hilarious effect. 'Auri picks up a Chayna and presses it against biochip reticulator's head, just behind biochip reticulator's right ear.'",""],["#86726|obj","#5643|obj",1617032367,1,"\"The elevator doors slide shut. The door swings shut in your face, forcing you to stop.\" This doesn't make sense, if it slides shut, it can't swing shut. WHJ - 2nd Floor Hallway elevator",""],["#67908|obj","#10619|obj",1617057912,1,"You lash out at Friday's arm with your Progia-9 gridphone and connect with bone jarring force, sending her Progia-9 gridphone spinning to the floor. - When Niko disarmed Friday, he was holding a left ankle sheath and a WJF enforcer II. For some reason it said he hit her with his progia-9, which he didn't have. So I'm filing this under typos.",""],["#57768|obj","#68200|obj",1618243596,1,"Blistering Plains during a lightening/thunder storm, got a message that 'The deafening sound of thunder breaks the silence of the streets'. Not a huge deal, but given that their aren't any streets out  in the blistering plains, wanted to note it. ",""],["#86764|obj","#5500|obj",1619234024,1,"At Skin Depp, 'five spicy megameat taces' are here. The plural of taco is tacos.",""],["#86875|obj","#973|obj",1619276415,1,"Not positive this counts.  Surviving Withmore : Learning and Your Appearance, Withmore City Services 1 - directs you to use '@SKINTONE' when you type that, you get 'I don't understand that.'  After helping it, I saw it was '@skintone me', which the system recognized.  Not a huge deal, but since it doesn't error by directing to help or to suggest a target, might be better if '@skintone me' was suggested in the book.",""],["#86875|obj","#973|obj",1619386582,1,"In Surviving Withmore, Withmore City Services, page 3, 'Making Flash'.  Directions to SHI say to go East to Beretta Way, then South.  Correct directions are to go East to Gibson, then south.",""],["#84240|obj","#49559|obj",1619414375,1,"in the Praetorian apartment bedrooms that don't face north there is the line \"ambient lighting floods in from an expansive window set within the northern wall,\" Which given they face west, south and east, doesn't make physical sense.",""],["#86879|obj","#973|obj",1619562358,1,"When I used \"melvin\" without a target, it said: \"Elara evilly looks around the room with an gleam in their eyes.\" - Which should be instead: \"a gleam\" and (in my case) \"in her eyes.\"",""],["#78988|obj","#19113|obj",1620035060,1,"In the help file for attax at F2, when inspecting the cards it shows the numbers on the bottom left, while in the helpfile it says on the top right.",""],["#57768|obj","#23354|obj",1620146265,1,"TSX supercharged motorcycle engine has no description, at least on the shelf at TSX. Shows up at A tangible $rpgthing.",""],["#85470|obj","#18567|obj",1620440416,1,"When petting a FeliBot, feedback on the controller screen reads 'You purr affectionately as you am pet.' - Wrong verb use, should be 'as you are pet.'",""],["#84240|obj","#508|obj",1620710706,1,"When being tailed by another vehicle the output shows as: A 2089 HondaMitsu Koi trundles in slowly from the herrigin.south.",""],["#24674|obj","#68691|obj",1621019232,1,"\"On the television: [A grin splits the mans face as the final ball drops from the second lottery style machine into his hand.] The final player in our trade today will be Jessica Ajuremuny from the NLM Icons and he will be going to the ViriiSoma Contagion.\" HE should be SHE",""],["#86438|obj","#16040|obj",1622121374,1,"11th floor of Xpress Heights while in the elevator, shows number '12' instead.",""],["#57768|obj","#31544|obj",1622151685,1,"When using a hobby controller with a FeliBot, the controller shows /system twice as a message available, and stop twice on the controller. Should only be shown once.",""],["#53713|obj","#12102|obj",1622502008,1,"'SK Triple Channel Robot Control' is undescribed, it reads 'A tangible $rpgthing.'",""],["#84715|obj","#7464|obj",1622876962,1,"The studdly message when you are wearing clothes is 'You give the command and your SK Studdly DoRight(tm) Phallic Replacement starts to hum and vibrate noticably underneath your nothing.' It would be better if it was 'You give the command and your SK Studdly DoRight(tm) Phallic Replacement starts to hum and vibrate noticably underneath your clothing.'",""],["#86670|obj","#18567|obj",1624243767,1,"When trying to feed a pet you're not authorized to, the following message shows up. In this case, the dog's name is Cleo. \"You attempt to feed Cleo Dog a nothing, but they bat Your attempt.\" 'Nothing' should be the food item I'm trying to feed them.",""],["#86680|obj","#3498|obj",1624849504,1,"Failing to feed a person because they don't trust you prints \"You attempt to feed >name of person here> a nothing, but they bat Your attempt.\" Errors are the nothing and the capitalization of Your.",""],["#67813|obj","#3579|obj",1624942068,1,"At the skywatch mall u-vend, outside of mad eddies and the dragon, When someone loads the u-vend it says puts the nothing in the U-Vend vending machine and sets the price. It should instead say what is being put in the u-vend, instead of nothing.",""],["#86680|obj","#24640|obj",1625170243,1,"The confirmation message when you @finalize a clothing item with its @tread set lacks capitalization and the word 'will' (... so you not be able to change...)",""],["#68807|obj","#13204|obj",1625652058,1,"In the combat hit message of a wooden bokken, the first word after a sentence is not capslocked, like it is supposed to be. The message is .... You charge at X, thrusting your wooden bokken viciously into X's back with crippling force. blood flicks off the end of your bokken as you spin it back into a ready position. .... but the word 'blood' should be caps 'Blood', as it is a new sentence.",""],["#53713|obj","#43634|obj",1625800163,1,"Low Light Mutation and WKD Gastric Carrion Ameliorator aren't described, they just say 'A tangible $rpgthing.'.",""],["#68807|obj","#24097|obj",1626255378,1,"Another combat message typo. When two people fighting with a bokken block each other, the RECEIVING END BLOCKING has a typo in it. ----- (combat you parried) his thrusts his wooden bokken at your ribs with vicious intent. You quickly side-step and bat the attack aside with your wooden bokken. -----Obviously this should not be 'his thrusts his wooden bokken' but rather 'ENEMYNAME thrusts his wooden bokken' instead.",""],["#68686|obj","#49575|obj",1627427197,1,"When adding a document to an e-note, you can type \".printing\" for help with print formatting. There is a typo at the bottom \"Your still editing\" instead of \"You're still editing\" // additionally, it says ASCII art is allowed on flyers, but if I recall correctly, that policy has changed recently and that ASCII art isn't allowed on flyers any more.",""],["#87111|obj","#973|obj",1628633687,1,"On the timeline, the entry starting '2095.3 Multiple murders on the world...'; 'Withmore' is spelled incorrectly. Also, 'The gang violence boils over and begins effecting Gold Sector' should be 'affecting', not 'effecting'.",""],["#84240|obj","#49526|obj",1628746638,1,"Your studied eye leads you to believe it is laboratory grade Artic Sunshine Dezraldin. Artic should probably be Arctic.",""],["#84240|obj","#49526|obj",1629183959,1,"While I was grappled by Karen and when Susan lunges towards Karen, I see- Susan keeps a firm grip on you while fighting off Karen's attempts to grapple her. Pretty sure it should be- Karen keeps a firm grip on you while fighting off Susan's attempts to grapple her.",""],["#84672|obj","#458|obj",1631805710,1,"This occurred during a fight between Fury and Mateba, outside of The Black Drome. During the fight, we received an incorrect combat message: \"Fury weaves back and forth looking for an opening to attack Mateba, but Mateba tracks his every move, and squeezes the trigger lightly at just the right moment. The gun kicks softly in Mateba's hands and gouts a small plume of smoke as the round slams into Alice Songury's back, sending his staggering to one side.\" I was told the wrong pronoun substitution was used.",""],["#84209|obj","#31354|obj",1632256765,1,"Not a typo, per se, but mismatch on word usage vs. weapon damage: SK Nailz attack message \"You savagely slice [target] (bodypart) with your nailz.\" does Piercing damage (per Armory target dummies) but message says Slice. Think the word usage may be clearer being more a finger-stabby/gouge-y type action.",""],["#86438|obj","#24098|obj",1633320575,1,"Typo: 'The SkyFox AeroCab 88 flys away with a blast of hot air, heading northwest.' Should be 'flies'.",""],["#84240|obj","#14587|obj",1634065627,1,"When looking at VS encrypted gridterm. It's description has a $ in it. \"A tangible $rpgthing. The VS encrypted gridterm contains data that depends on major effort to finalize the project.\"",""],["#69083|obj","#7685|obj",1635796491,1,"getting anything in the void results in \"You can't do that while You can't do that while OOC..\" Which should have an obvious fix.",""],["#69083|obj","#7685|obj",1635804271,1,"The generic food and drink help file includes a doubling of the & symbol on this line,  Main things that need to be set on GF&&D:",""],["#84240|obj","#28130|obj",1636218669,1,"When looking at the VS drug research vial-set, it says a line that \"The VS drug research vial-set contains a final stage treatment for treatment of ebola that depends on tertiary exploration to convey results on its performance.\" However, the whole sentence is repeated. The first part of the description also now implies that it's an e-note rather than a case containing various vials which I vaguely remember the vial set being in the past.",""],["#63410|obj","#50083|obj",1636876334,1,"Through the floor to ceiling window: The LukeAire Stinger banks right, the hard left, slowly arcing in the air before going in the opposite direction.",""],["#86670|obj","#49526|obj",1638049065,1,"When crafting things with chefs islands for the first time, the craft X with island command produces this message. \"You clear the board on the chefs island and begins making something new.\" Begins should be begin.",""],["#84240|obj","#32003|obj",1638334531,1,"When in the back of the VS M577-M Evac APC and someone unlocks the doors there is a message, 'The side hatch unlatches and slides back along the side of the %t.' The %t shouldn't be there but not sure what it is intended to be.",""],["#87968|obj","#2415|obj",1639315800,1,"There's a grammatical error in the random background noise of North Fallout Road. It says \"the mouthwatering smell local cuisine fills the air\". It's missing an \"of\" between \"mouthwatering smell\" and \"local cuisine\", so it should read \"mouthwatering smell of local cuisine\". ",""],["#85519|obj","#2353|obj",1639513799,1,"'japanese' in the changing room description element in North Tamiya rooms should be capitalized. 'Japanese'.",""],["#84240|obj","#25499|obj",1639896073,1,"When looking at the new VS VitaGummies the word 'fond' should instead be 'font'",""]]},"universal_words":{"info":["#98|obj","r"],"value":["withmore","nlm","shi","sic","chyen","wjf","saedor","krupp","viriisoma","genetek","english"]},"uppercases":{"info":["#3172|obj","r"],"value":["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},"use_article_a":{"info":["#36|obj","r"],"value":["unit","unix","one","once","utility"]},"use_article_an":{"info":["#36|obj","r"],"value":[]},"weight":{"info":["#1673|obj","r"],"value":0}},"property_names":["key","aliases","description","object_size","last_location","realname","weight","movement_queue","debug","type_history","create_date","instance_id","help_msg","digits","alphabet","use_article_a","use_article_an","tab","specials","typos","number_words","binary_conversions","uppercases","common_words","caseless_alphabet","carat","universal_words","exit_aliases","greek_alphabet","permitted_pronoun_property_references","non_alphabet_chars"]},"verbs":{"verb_data":{"strip_all_comments":{"args":["this","none","this"],"code":["lines = filter = args;","for line in (filter)","  if (!line || line[1] == \"#\")","    \"strip comments\";","    lines = setremove(lines, line);","  endif","  $cu:sin(0);","endfor","return lines;","\"VMS NOTE typo #98 01/30/21  9:53\";","\"VMS VERSION 1.01\";","\"Last modified by Johnny (#98) on Sat Jan 30 09:53:15 2021 PST\";"],"cored_props_in_code":[],"cored_verbs_in_code":["cu:sin"],"direct_cored_verbs_in_code":["cu"],"info":["#98|obj","rxd","strip_all_comments"],"wizard":1}},"verb_names":["strip_all_comments"]}},"package_description":"This is a test.","package_hash":"3E91DB2C9E1ABE5FA77E28785649689E","package_name":"Test String Utils","package_version":1.3}
